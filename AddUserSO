
<#
.Descripción
Este script esta diseñado para crear automaticamente
  usuarios de un sistema Windows 2022 Server. 
Necesita un CSV donde estaran almacenados los usuarios 
  a introducir.
Formato CSV
 - Cabeceras
 - Datos Usuario
Ej:
Nombre;Apellido;Usuario;Grupo;Correo;RutaOU
Sandra;Moreno;smoreno;Almacén;sandra.moreno@medicalia.local;OU=Almacen,OU=Users,OU=Parque,DC=medicalia,DC=local
#>


# Ruta del archivo CSV con los usuarios
param (
    [string]$csvPath  
)

# Comprobar si la ruta es correcta.
if (-not $csvPath) {
    Write-Host "Uso: .\crear_usuarios.ps1 C:\ruta\usuarios.csv" -ForegroundColor Cyan
    exit
}

# Comprobar si el archivo existe.
if (-Not (Test-Path $csvPath)) {
    Write-Host "El archivo no existe. Verifica la ruta e intenta nuevamente." -ForegroundColor Red
    exit
}

# Importar los usuarios desde el CSV
# Cabeceras del CSV:
# 
$usuarios = Import-Csv -Path $csvPath -Delimiter ";"

foreach ($usuario in $usuarios) {
    $nombre = $usuario.Nombre
    $apellido = $usuario.Apellido
    $usuarioAD = $usuario.Usuario
    $grupo = $usuario.Grupo
    $correo = $usuario.Correo
    $ouPath = $usuario.RutaOU
    $displayName = "$nombre $apellido"
    $password = "Medicalia123!"  # Contraseña por defecto

    # Validación de los  datos.
    if (-not $nombre -or -not $apellido -or -not $usuarioAD -or -not $grupo -or -not $correo -or -not $ouPath) {
        Write-Host "Error: Datos incompletos para el usuario '$usuarioAD'." -ForegroundColor Red
        continue
    }

    # Comprobar si la OU existe.
    try {
        Get-ADOrganizationalUnit -Identity $ouPath -ErrorAction Stop | Out-Null
    } catch {
        Write-Host "Error: La ruta de OU '$ouPath' no existe. Usuario '$usuarioAD' no creado." -ForegroundColor Red
        continue
    }

    # Comprobar si el usuario ya existe.
    $existeUsuario = Get-ADUser -Filter { SamAccountName -eq $usuarioAD } -ErrorAction SilentlyContinue

    if (-not $existeUsuario) {
        # Creación del usuario.
        New-ADUser -SamAccountName $usuarioAD `
                   -UserPrincipalName "$usuarioAD@medicalia.local" `
                   -Name $displayName `
                   -GivenName $nombre `
                   -Surname $apellido `
                   -DisplayName $displayName `
                   -EmailAddress $correo `
                   -Path $ouPath `
                   -AccountPassword (ConvertTo-SecureString $password -AsPlainText -Force) `
                   -Enabled $true ` # Usuario activo.
                   -ChangePasswordAtLogon $true ` # Cambio el pass en primer inicio de sesion.
                   -PassThru

        Write-Host "Usuario '$displayName' creado en '$ouPath'." -ForegroundColor Green
    } else {
        Write-Host "El usuario '$displayName' ya existe." -ForegroundColor Yellow
    }

    # Verificar si el grupo existe
    $existeGrupo = Get-ADGroup -Filter "Name -eq '$grupo'" -ErrorAction SilentlyContinue

    if ($existeGrupo) {
        Add-ADGroupMember -Identity $grupo -Members $usuarioAD
        Write-Host "Usuario '$displayName' agregado al grupo '$grupo'." -ForegroundColor Cyan
    } else {
        Write-Host "Error: El grupo '$grupo' no existe. No se agregó el usuario '$displayName'." -ForegroundColor Red
    }
}
